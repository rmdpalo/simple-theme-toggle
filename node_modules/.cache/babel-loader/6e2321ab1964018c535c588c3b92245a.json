{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/personal folder/styled-components-experiments/showcase/src/App.js\";\nimport React, { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './Theme';\nimport { GlobalStyles } from './Global';\nconst StyledButton = styled.button`\n/* Adapt the colors based on primary prop */\nbackground: ${props => props.primary ? \"palevioletred\" : \"papayawhip\"};\ncolor: ${props => props.primary ? \"papayawhip\" : \"palevioletred\"};\n\nfont-size: 1em;\nmargin: 1em;\npadding: 0.25em 1em;\nborder: 2px solid palevioletred;\nborder-radius: 25px;\n`;\n\nfunction App() {\n  // sets theme to state\n  const [theme, setTheme] = useState('light'); // toggles between themes\n\n  const toggleTheme = () => {\n    // If the theme is light, switch to dark\n    if (theme === 'light') {\n      setTheme('dark'); // else switch to light\n    } else {\n      setTheme('light');\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // ternary that allows us to toggle between the two themes we've set\n    React.createElement(ThemeProvider, {\n      theme: theme === 'light' ? lightTheme : darkTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: toggleTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Toggle theme\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"It's a \", theme, \" theme!\"), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    })))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/personal folder/styled-components-experiments/showcase/src/App.js"],"names":["React","useState","styled","ThemeProvider","lightTheme","darkTheme","GlobalStyles","StyledButton","button","props","primary","App","theme","setTheme","toggleTheme"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACM,MAAO;;cAErBC,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,eAAhB,GAAkC,YAAa;SAC7DD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,YAAhB,GAA+B,eAAgB;;;;;;;CAHjE;;AAYA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,OAAD,CAAlC,CAFa,CAIb;;AACA,QAAMa,WAAW,GAAG,MAAM;AACxB;AACA,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR,CADqB,CAEvB;AACC,KAHD,MAGO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GARD;;AASA;AAAA;AACE;AACA,wBAAC,aAAD;AAAe,MAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBR,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,uDACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAES,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYF,KAAZ,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAFF;AAYD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './Theme';\nimport { GlobalStyles } from './Global';\n\nconst StyledButton = styled.button`\n/* Adapt the colors based on primary prop */\nbackground: ${props => props.primary ? \"palevioletred\" : \"papayawhip\"};\ncolor: ${props => props.primary ? \"papayawhip\" : \"palevioletred\"};\n\nfont-size: 1em;\nmargin: 1em;\npadding: 0.25em 1em;\nborder: 2px solid palevioletred;\nborder-radius: 25px;\n`;\n\nfunction App() {\n  // sets theme to state\n  const [theme, setTheme] = useState('light');\n  \n  // toggles between themes\n  const toggleTheme = () => {\n    // If the theme is light, switch to dark\n    if (theme === 'light') {\n      setTheme('dark');\n    // else switch to light\n    } else {\n      setTheme('light');\n    }\n  }\n  return (\n    // ternary that allows us to toggle between the two themes we've set\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <button onClick={toggleTheme}>Toggle theme</button>\n        <h1>It's a {theme} theme!</h1>\n        <footer>\n        </footer>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}