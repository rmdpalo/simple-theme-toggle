{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/personal folder/styled-components-experiments/showcase/src/App.js\";\nimport React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './Theme';\nimport { GlobalStyles } from './Global'; // sets theme to state\n\nconst [theme, setTheme] = useState('light'); // toggles between themes\n\nconst toggleTheme = () => {\n  // If the theme is light, switch to dark\n  if (theme === 'light') {\n    setTheme('dark'); // else switch to light\n  } else {\n    setTheme('light');\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: lightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Toggle theme\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"It's a light theme!\"), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/personal folder/styled-components-experiments/showcase/src/App.js"],"names":["React","useState","ThemeProvider","lightTheme","darkTheme","GlobalStyles","theme","setTheme","toggleTheme","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,YAAT,QAA6B,UAA7B,C,CAEA;;AACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,OAAD,CAAlC,C,CAEA;;AACA,MAAMO,WAAW,GAAG,MAAM;AACxB;AACA,MAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,IAAAA,QAAQ,CAAC,MAAD,CAAR,CADqB,CAEvB;AACC,GAHD,MAGO;AACLA,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,CARD;;AAUA,SAASE,GAAT,GAAe;AACb,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEN,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,uDACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAWD;;AAED,eAAeM,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './Theme';\nimport { GlobalStyles } from './Global';\n\n// sets theme to state\nconst [theme, setTheme] = useState('light');\n\n// toggles between themes\nconst toggleTheme = () => {\n  // If the theme is light, switch to dark\n  if (theme === 'light') {\n    setTheme('dark');\n  // else switch to light\n  } else {\n    setTheme('light');\n  }\n}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <>\n        <GlobalStyles />\n        <button>Toggle theme</button>\n        <h1>It's a light theme!</h1>\n        <footer>\n        </footer>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}